package com.gitub.eddboyer.launchpadrecruits.beans;

import java.util.Date;
import java.util.List;

/**
 * A Launchpad Recruits interview.
 * 
 * @author Edd Boyer
 */
public class LaunchpadInterviewBean {

	/** Interview ID. */
	private Integer interviewId;
	/**
	 * You can omit this parameter to create the interview under your account. To create a new
	 * interview on your subaccount, you need to set this to that subaccount's Account ID.
	 * <p>
	 * Default: (your Account ID)
	 */
	private Integer accountId;
	/** The job title or name of the interview. */
	private String title;
	/**
	 * Job responsibilities (Basic HTML formatting is allowed). Maximum number of characters is
	 * 65300.
	 */
	private String responsibilities;
	/**
	 * Qualifications and skills needed for the job (Basic HTML formatting is allowed). Maximum
	 * number of characters is 65300.
	 */
	private String qualifications;
	/**
	 * Determines if a candidate can view and answer the question again. By default your applicants
	 * will not be able to re-record their answers (like a real interview).
	 * <p>
	 * Default: false
	 */
	private Boolean rerecord;
	/**
	 * Date when the interview will close. After the specified date, candidates will no longer be
	 * able to access the interview. Date format should be YYYY-MM-DD.
	 */
	private Date deadline;
	/**
	 * This message will be shown to candidates before they take the interview. You can use it to
	 * tell them what you are looking for in your assessment..
	 */
	private String introductionMessage;
	/** This message will be shown to candidates after they take interview. */
	private String closingMessage;
	/**
	 * Time in seconds that candidates will have to prepare after seeing each question. When this
	 * time expires recording will start automatically. Allowed values are 15, 30, 45, and 60.
	 * <p>
	 * Default: 30
	 */
	private Integer timeLimit;
	/**
	 * After the interview is completed, the candidate will be shown a button that redirects to this
	 * URL.
	 */
	private String redirectUrl;
	/**
	 * Sets the default locale of the interview.
	 * <p>
	 * Default: en
	 */
	private String defaultLanguage;
	/**
	 * Array of questions containing question text and time limit for each (refer to Question
	 * Parameters).
	 */
	private List<LaunchpadQuestionBean> questions;
	/** Array of filter questions containing the question text. */
	private List<LaunchpadQuestionBean> filterQuestions;
	/**
	 * If set to true, candidates will not be able to take the interview if they answer No to any
	 * filter questions. If set to false, candidates will be able to continue regardless of their
	 * answers. Note that this setting applies only if at least one filter question is set.
	 * <p>
	 * Default: true
	 */
	private Boolean strictFilter;

	/**
	 * Public link that can be used for a video interview.
	 * <p>
	 * Generated by Launchpad Recruits and available on Public Link request
	 */
	private String link;

	/**
	 * @return the accountId
	 */
	public Integer getAccountId() {
		return accountId;
	}

	/**
	 * @param accountId
	 *            the accountId to set
	 */
	public void setAccountId(Integer accountId) {
		this.accountId = accountId;
	}

	/**
	 * @return the title
	 */
	public String getTitle() {
		return title;
	}

	/**
	 * @param title
	 *            the title to set
	 */
	public void setTitle(String title) {
		this.title = title;
	}

	/**
	 * @return the responsibilities
	 */
	public String getResponsibilities() {
		return responsibilities;
	}

	/**
	 * @param responsibilities
	 *            the responsibilities to set
	 */
	public void setResponsibilities(String responsibilities) {
		this.responsibilities = responsibilities;
	}

	/**
	 * @return the qualifications
	 */
	public String getQualifications() {
		return qualifications;
	}

	/**
	 * @param qualifications
	 *            the qualifications to set
	 */
	public void setQualifications(String qualifications) {
		this.qualifications = qualifications;
	}

	/**
	 * @return the rerecord
	 */
	public Boolean getRerecord() {
		return rerecord;
	}

	/**
	 * @param rerecord
	 *            the rerecord to set
	 */
	public void setRerecord(Boolean rerecord) {
		this.rerecord = rerecord;
	}

	/**
	 * @return the deadline
	 */
	public Date getDeadline() {
		if (deadline != null) {
			return new Date(deadline.getTime());
		} else {
			return null;
		}
	}

	/**
	 * @param deadline
	 *            the deadline to set
	 */
	public void setDeadline(Date deadline) {
		if (deadline != null) {
			this.deadline = new Date(deadline.getTime());
		} else {
			this.deadline = null;
		}
	}

	/**
	 * @return the introductionMessage
	 */
	public String getIntroductionMessage() {
		return introductionMessage;
	}

	/**
	 * @param introductionMessage
	 *            the introductionMessage to set
	 */
	public void setIntroductionMessage(String introductionMessage) {
		this.introductionMessage = introductionMessage;
	}

	/**
	 * @return the closingMessage
	 */
	public String getClosingMessage() {
		return closingMessage;
	}

	/**
	 * @param closingMessage
	 *            the closingMessage to set
	 */
	public void setClosingMessage(String closingMessage) {
		this.closingMessage = closingMessage;
	}

	/**
	 * Gets time in seconds that candidates will have to prepare after seeing each question. When
	 * this time expires recording will start automatically. Allowed values are 15, 30, 45, and 60.
	 * <p>
	 * Default: 30
	 * 
	 * @return the timeLimit
	 */
	public Integer getTimeLimit() {
		return timeLimit;
	}

	/**
	 * Sets time in seconds that candidates will have to prepare after seeing each question. When
	 * this time expires recording will start automatically. Allowed values are 15, 30, 45, and 60.
	 * <p>
	 * Default: 30
	 * 
	 * @param timeLimit
	 *            the timeLimit to set
	 */
	public void setTimeLimit(Integer timeLimit) {
		this.timeLimit = timeLimit;
	}

	/**
	 * @return the redirectUrl
	 */
	public String getRedirectUrl() {
		return redirectUrl;
	}

	/**
	 * @param redirectUrl
	 *            the redirectUrl to set
	 */
	public void setRedirectUrl(String redirectUrl) {
		this.redirectUrl = redirectUrl;
	}

	/**
	 * Gets the default locale of the interview.
	 * <p>
	 * Default: en
	 * 
	 * @return the defaultLanguage
	 */
	public String getDefaultLanguage() {
		return defaultLanguage;
	}

	/**
	 * Sets the default locale of the interview.
	 * <p>
	 * Default: en
	 * 
	 * @param defaultLanguage
	 *            the defaultLanguage to set
	 */
	public void setDefaultLanguage(String defaultLanguage) {
		this.defaultLanguage = defaultLanguage;
	}

	/**
	 * @return the questions
	 */
	public List<LaunchpadQuestionBean> getQuestions() {
		return questions;
	}

	/**
	 * @param questions
	 *            the questions to set
	 */
	public void setQuestions(List<LaunchpadQuestionBean> questions) {
		this.questions = questions;
	}

	/**
	 * @return the filterQuestions
	 */
	public List<LaunchpadQuestionBean> getFilterQuestions() {
		return filterQuestions;
	}

	/**
	 * @param filterQuestions
	 *            the filterQuestions to set
	 */
	public void setFilterQuestions(List<LaunchpadQuestionBean> filterQuestions) {
		this.filterQuestions = filterQuestions;
	}

	/**
	 * @return the strictFilter
	 */
	public Boolean getStrictFilter() {
		return strictFilter;
	}

	/**
	 * @param strictFilter
	 *            the strictFilter to set
	 */
	public void setStrictFilter(Boolean strictFilter) {
		this.strictFilter = strictFilter;
	}

	/**
	 * @return the link
	 */
	public String getLink() {
		return link;
	}

	/**
	 * @param link
	 *            the link to set
	 */
	public void setLink(String link) {
		this.link = link;
	}

	/**
	 * @return the interviewId
	 */
	public Integer getInterviewId() {
		return interviewId;
	}

	/**
	 * @param interviewId
	 *            the interviewId to set
	 */
	public void setInterviewId(Integer interviewId) {
		this.interviewId = interviewId;
	}
}
